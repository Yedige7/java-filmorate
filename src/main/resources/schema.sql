CREATE TABLE IF NOT EXISTS mpa (
                                   mpa_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                   name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS genres (
                                      genre_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                      name varchar(255) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
                                     film_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     name varchar(250) NOT NULL,
                                     description varchar(250) NOT NULL,
                                     release_date DATE,
                                     duration INTEGER,
                                     mpa_id BIGINT
);

CREATE TABLE IF NOT EXISTS films_genres (
                                            film_id BIGINT NOT NULL,
                                            genre_id BIGINT NOT NULL,
                                            PRIMARY KEY (film_id, genre_id),
                                            FOREIGN KEY(film_id) REFERENCES films(film_id) ON DELETE CASCADE,
                                            FOREIGN KEY(genre_id) REFERENCES genres(genre_id)
);

CREATE TABLE IF NOT EXISTS users (
                                     user_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                     email varchar(255) UNIQUE NOT NULL,
                                     login varchar(255) NOT NULL,
                                     name varchar(255),
                                     birthday DATE
);

CREATE TABLE IF NOT EXISTS friends (
                                       user_id BIGINT NOT NULL,
                                       friend_id BIGINT NOT NULL,
                                       isConfirm bool NOT NULL DEFAULT false,
                                       PRIMARY KEY (user_id, friend_id),
                                       FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE,
                                       FOREIGN KEY(friend_id) REFERENCES users(user_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS likes (
                                     user_id BIGINT NOT NULL,
                                     film_id BIGINT NOT NULL,
                                     PRIMARY KEY (user_id, film_id),
                                     FOREIGN KEY(film_id) REFERENCES films(film_id) ON DELETE CASCADE,
                                     FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE

);

-- Таблица для хранения отзывов
CREATE TABLE IF NOT EXISTS reviews (
                                    review_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                    content TEXT NOT NULL,
                                    is_positive BOOLEAN NOT NULL,
                                    user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
                                    film_id BIGINT NOT NULL REFERENCES films (film_id) ON DELETE CASCADE,
                                    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                    CONSTRAINT content_length_check CHECK (LENGTH(content) <= 5000)
);

-- Таблица для хранения лайков отзывов
CREATE TABLE IF NOT EXISTS review_likes (
                                    review_id BIGINT NOT NULL REFERENCES reviews (review_id) ON DELETE CASCADE,
                                    user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
                                    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                    PRIMARY KEY (review_id, user_id)
);

-- Таблица для хранения дизлайков отзывов
CREATE TABLE IF NOT EXISTS review_dislikes (
                                    review_id BIGINT NOT NULL REFERENCES reviews (review_id) ON DELETE CASCADE,
                                    user_id BIGINT NOT NULL REFERENCES users (user_id) ON DELETE CASCADE,
                                    created_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                                    PRIMARY KEY (review_id, user_id)
);

CREATE TABLE IF NOT EXISTS events (
    event_id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    ts BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    event_type VARCHAR(10) NOT NULL,
    operation VARCHAR(10) NOT NULL,
    entity_id BIGINT NOT NULL,
    FOREIGN KEY(user_id) REFERENCES users(user_id) ON DELETE CASCADE
);

